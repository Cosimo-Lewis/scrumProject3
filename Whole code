import random

def menu(counter, newGameArray):
    getName = input('What is player one\'s name?')
    playerOption = int(input('Enter 1 if you want to play player against player \nEnter 2 if you wish to play player against CPU \nEnter 3 if you wish to play the special mode, you have only between 10 and 20 moves to beat player2 '))
    someArray = []
    someArray.append(getName)
    if playerOption == 1:
        getName2 = input('What is player two\'s name?')
        someArray.append(getName2)
        placeCounter(newGameArray, getName, getName2)
    if playerOption == 2:
        getName2 = input('What is player two\'s name?')
        someArray.append(getName2)
        counter = specialModeage()
    if playerOption == 3:
        HAL9000(newGameArray, getName)
    return(someArray)


        
symbolArray = ["X","O"]


def specialModeage():
    turns = 2*(random.randint(10,20))
    counter = turns 
    return counter

def makeGameArray():
    counter = 0
    gameArray = []
    for i in range (0,100):
        gameArray.append('-')
    for y in range(0,10):
        print ("\n")
        for x in range(0,10):
            print (gameArray[counter]," ",end="")
            counter = counter + 1
    return gameArray


def placeCounter(newGameArray, getName, getName2):
    counter = 0
    playerCounter = 100
    playerTurnCounter1 = 0
    playerTurnCounter2 = 0
    winCounter = 0
    win = False
    while win == False:
        if playerCounter % 2 == 0:
            symbol1 = symbolArray[0]
            print("\n")
            print("It is ", getName,"\'s turn")
# Add player1's name here ^
            place = int(input("Where would you like to place you piece? Pick between 1 and 10"))
            if newGameArray[100 - 10 + place - 1] == "-":
                place1 = 100 - 10 + place - 1
            elif newGameArray[100 - 20 + place - 1] == "-":
                place1 = 100 - 20 + place - 1
            elif newGameArray[100 - 30 + place - 1] == "-":
                place1 = 100 - 30 + place - 1
            elif newGameArray[100 - 40 + place - 1] == "-":
                place1 = 100 - 40 + place - 1
            elif newGameArray[100 - 50 + place - 1] == "-":
                place1 = 100 - 50 + place - 1
            elif newGameArray[100 - 60 + place - 1] == "-":
                place1 = 100 - 60 + place - 1
            elif newGameArray[100 - 70 + place - 1] == "-":
                place1 = 100 - 70 + place - 1
            elif newGameArray[100 - 80 + place - 1] == "-":
                place1 = 100 - 80 + place - 1
            elif newGameArray[100 - 90 + place - 1] == "-":
                place1 = 100 - 90 + place - 1
            elif newGameArray[100 - 100 + place - 1] == "-":
                place1 = 100 - 100 + place - 1
            else:
                place = int(input("That space has already been taken. PLease choose another one"))
            counter = 0
            newGameArray.pop(place1)
            newGameArray.insert(place1,symbol1)
            playerCounter = playerCounter - 1
            for y in range(0,10):
                print ("\n")
                for x in range(0,10):
                    print (newGameArray[counter]," ",end="")
                    counter = counter + 1
                
        else:
            symbol2 = symbolArray[1]
            print("It is", getName2, "\'s turn")
# Add player2's name here ^
            place = int(input("Where would you like to place you piece? Pick between 1 and 10"))
            place1 = 100 - 10 + place - 1
            if newGameArray[place1] == "-":
                place1 = 100 - 10 + place - 1
            elif newGameArray[100 - 20 + place - 1] == "-":
                place1 = 100 - 20 + place - 1
            elif newGameArray[100 - 30 + place - 1] == "-":
                place1 = 100 - 30 + place - 1
            elif newGameArray[100 - 40 + place - 1] == "-":
                place1 = 100 - 40 + place - 1
            elif newGameArray[100 - 50 + place - 1] == "-":
                place1 = 100 - 50 + place - 1
            elif newGameArray[100 - 60 + place - 1] == "-":
                place1 = 100 - 60 + place - 1
            elif newGameArray[100 - 70 + place - 1] == "-":
                place1 = 100 - 70 + place - 1
            elif newGameArray[100 - 80 + place - 1] == "-":
                place1 = 100 - 80 + place - 1
            elif newGameArray[100 - 90 + place - 1] == "-":
                place1 = 100 - 90 + place - 1
            elif newGameArray[100 - 100 + place - 1] == "-":
                place1 = 100 - 100 + place - 1
            else:
                place = int(input("That space has already been taken. PLease choose another one"))
            counter = 0
            newGameArray.pop(place1)
            newGameArray.insert(place1,symbol2)
            playerCounter = playerCounter - 1
            for y in range(0,10):
                print ("\n")
                for x in range(0,10):
                    print (newGameArray[counter]," ",end="")
                    counter = counter + 1





def HAL9000(newGameArray, getName):
        counter = 0
        playerCounter = 100
        playerTurnCounter1 = 0
        playerTurnCounter2 = 0
        winCounter = 0
        win = False
        while win == False:
            if playerCounter % 2 == 0:
                symbol1 = symbolArray[0]
                print("\n")
                print("It is,", getName, "\'s turn")
# Add player1's name here ^
                place = int(input("Where would you like to place you piece? Pick between 1 and 10"))
                if place > 11:
                    place = int(input("PLease choose a number between 1 and 10"))
                if newGameArray[100 - 10 + place - 1] == "-":
                    place1 = 100 - 10 + place - 1
                elif newGameArray[100 - 20 + place - 1] == "-":
                    place1 = 100 - 20 + place - 1
                elif newGameArray[100 - 30 + place - 1] == "-":
                    place1 = 100 - 30 + place - 1
                elif newGameArray[100 - 40 + place - 1] == "-":
                    place1 = 100 - 40 + place - 1
                elif newGameArray[100 - 50 + place - 1] == "-":
                    place1 = 100 - 50 + place - 1
                elif newGameArray[100 - 60 + place - 1] == "-":
                    place1 = 100 - 60 + place - 1
                elif newGameArray[100 - 70 + place - 1] == "-":
                    place1 = 100 - 70 + place - 1
                elif newGameArray[100 - 80 + place - 1] == "-":
                    place1 = 100 - 80 + place - 1
                elif newGameArray[100 - 90 + place - 1] == "-":
                    place1 = 100 - 90 + place - 1
                elif newGameArray[100 - 100 + place - 1] == "-":
                    place1 = 100 - 100 + place - 1
                else:
                    place = int(input("That space has already been taken. PLease choose another one"))
                counter = 0
                newGameArray.pop(place1)
                newGameArray.insert(place1,symbol1)
                playerCounter = playerCounter - 1
                for y in range(0,10):
                    print ("\n")
                    for x in range(0,10):
                        print (newGameArray[counter]," ",end="")
                        counter = counter + 1
                
            else:
                symbol2 = symbolArray[1]
                print("\n")
                print("It is the computer's turn")
                place = random.randint(1,10)
                print(place)
                place1 = 100 - 10 + place - 1
                if newGameArray[place1] == "-":
                    place1 = 100 - 10 + place - 1
                elif newGameArray[100 - 20 + place - 1] == "-":
                    place1 = 100 - 20 + place - 1
                elif newGameArray[100 - 30 + place - 1] == "-":
                    place1 = 100 - 30 + place - 1
                elif newGameArray[100 - 40 + place - 1] == "-":
                    place1 = 100 - 40 + place - 1
                elif newGameArray[100 - 50 + place - 1] == "-":
                    place1 = 100 - 50 + place - 1
                elif newGameArray[100 - 60 + place - 1] == "-":
                    place1 = 100 - 60 + place - 1
                elif newGameArray[100 - 70 + place - 1] == "-":
                    place1 = 100 - 70 + place - 1
                elif newGameArray[100 - 80 + place - 1] == "-":
                    place1 = 100 - 80 + place - 1
                elif newGameArray[100 - 90 + place - 1] == "-":
                    place1 = 100 - 90 + place - 1
                elif newGameArray[100 - 100 + place - 1] == "-":
                    place1 = 100 - 100 + place - 1
                else:
                    place = random.randint(1,10)
                counter = 0
                newGameArray.pop(place1)
                newGameArray.insert(place1,symbol2)
                playerCounter = playerCounter - 1
                for y in range(0,10):
                    print ("\n")
                    for x in range(0,10):
                        print (newGameArray[counter]," ",end="")
                        counter = counter + 1


def saveGuesses(winName, winCounter):
    file = open('Connect 4 Scoreboard.txt','a')
    theText = (winName + ' took ' + str(winCounter) + ' guesses to find the words.')
    file.write(theText)
    file.write(' ')
    file.close()

def showScoreboard():
    fullstop = '.'
    file = open('Connect 4 Scoreboard.txt',)
    theText = file.read()
    file.close()
    stringLength = len(theText)
    for rato in range(0, stringLength - 1):
        if theText[rato] !=fullstop:
            print(theText[rato], end = "")
        else:
            print(theText[rato])


def restart():
    question = input('Would you like to play again? Yes or no?')
    if question == 'yes':
        menu(counter, newGameArray)
        

    
def main():
    getName = ''
    getName2 = ''
    counter = specialModeage()
    newGameArray = makeGameArray()
    getName, getName2 = menu(counter, newGameArray)

    HAL9000(newGameArray, getName)
    placeCounter(newGameArray, getName, getName2)
    saveGuesses(winName, winCounter)
    showScoreboard()
    question = restart()
    

    



main()

